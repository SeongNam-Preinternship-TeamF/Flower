version: "3"

services:
  # db:
  #   image: postgres:12.0-alpine
  #   # volumes:
  #   #   - postgres_data_dev:/var/lib/postgresql/data/
  #   environment:
  #     POSTGRES_USER: "eg_user"
  #     POSTGRES_PASSWORD: "eg_pw"
  #     POSTGRES_DB: "eg_db"
  #   ports:
  #     - 5432:5432

  backend:
    build:
      context: ./Backend # local repo의 Dockerfile의 위치
      # args:
      #   DJANGO_ALLOWED_HOSTS: "*"
      #   DJANGO_SECRET_KEY: "*"
      #   DJANGO_CORS_ORIGIN_WHITELIST: "*"
      # command: python manage.py runserver 0.0.0.0:8000
    command: flask run --host=0.0.0.0 --port=5000
    ports:
      - 5001:5000
    volumes:
      - ./Backend/:/backend/
    # expose:
    #   - 5001
    env_file:
      - ./settings/dev/.env.dev
    environment:
      FLASK_DEBUG: 1
      FLASK_APP: ./app.py
      FLASK_ENV: development
      # FLASK_APP: ./app.py
      # depends_on:
      #   - db

  frontend:
    build:
      context: ./frontend
    command: [ "npm", "start" ]
    ports:
      - 80:3000
    volumes:
      - ./frontend/:/frontend
      - ./frontend/node_modules/:/frontend/node_modules
    environment:
      - CI=true
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_BACKEND_URL=http://localhost:5000
    tty: true

  elasticsearch:
    build:
      context: ELK/elasticsearch/
      args:
        ELK_VERSION: 7.17.0
    volumes:
      - ./ELK/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    build:
      context: ELK/logstash/
      args:
        ELK_VERSION: 7.17.0
    volumes:
      - ./ELK/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,z
      - ./ELK/logstash/pipeline:/usr/share/logstash/pipeline:ro,z
    ports:
      - "5044:5044"
      - "5010:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: ELK/kibana/
      args:
        ELK_VERSION: 7.17.0
    volumes:
      - ./ELK/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  elasticsearch: # postgres_data_dev: null
